
================= kcp 字段信息

conv 		会话ID
mtu			最大传输单元
mss			最大分片大小
state 		连接状态（0xFFFFFFFF表示断开连接）
snd_una 	第一个未确认的包
snd_nxt 	下一个待分配的包的序号
rcv_nxt 	待接收消息序号
ssthresh 	拥塞窗口阈值 
rx_rttvar	ack接收rtt浮动值
rx_srtt 	ack接收rtt静态值
rx_rto 		由ack接收延迟计算出来的重传超时时间
rx_minrto 	最小重传超时时间
snd_wnd		发送窗口大小
rcv_wnd		接收窗口大小
rmt_wnd,	远端接收窗口大小
cwnd,		拥塞窗口大小
probe 		探查变量，IKCP_ASK_TELL表示告知远端窗口大小。IKCP_ASK_SEND表示请求远端告知窗口大小
interval	内部flush刷新间隔
ts_flush 	下次flush刷新时间戳
nodelay		是否启动无延迟模式
updated 	是否调用过update函数的标识
ts_probe,	下次探查窗口的时间戳
probe_wait 	探查窗口需要等待的时间
dead_link	最大重传次数
incr 		可发送的最大数据量

fastresend 	触发快速重传的重复ack个数
nocwnd		取消拥塞控制
stream 		是否采用流传输模式

snd_queue	发送消息的队列
rcv_queue	接收消息的队列
snd_buf 	发送消息的缓存
rcv_buf 	接收消息的缓存

acklist 	待发送的ack列表

buffer 		存储消息字节流的内存
output 		发送消息的回调函数

================= segment 字段信息

conv          
表示会话编号的整数，和tcp的 conv一样，通信双方需保证 conv相同，相互的数据包才能够被认可

cmd   
区分分片的作用。IKCP_CMD_PUSH:数据分片 IKCP_CMD_ACK:ack分片 IKCP_CMD_WASK请求告知窗口大小 IKCP_CMD_WINS:告知窗口大小

frg              
message中的segment分片ID（在message中的索引，由大到小，0表示最后一个分片）

wnd            
剩余接收窗口大小(接收窗口大小-接收队列大小)

ts          
message发送时刻的时间戳

sn              
message分片segment的序号

una            
待接收消息序号(接收滑动窗口左端)

rto              
该分片的超时重传等待时间

xmit          
发送分片的次数，每发送一次加一。

resendts    
下次超时重传的时间戳

fastack      
收到ack时计算的该分片被跳过的累计次数

len            
数据长度

data          
数据